DROP DATABASE IF EXISTS freela;
CREATE DATABASE freela;
USE freela;

-- =============================================
-- Tabela: endereco
-- Armazena informações de endereço dos usuários
-- =============================================
CREATE TABLE endereco (
    ID_Endereco INT AUTO_INCREMENT PRIMARY KEY,
    Pais VARCHAR(20) NOT NULL DEFAULT 'Brasil',
    CEP VARCHAR(10),
    Logradouro VARCHAR(50),
    Cidade VARCHAR(50),
    Bairro VARCHAR(50),
    Estado CHAR(2),
    Numero INT,
    Complemento VARCHAR(50),
    CONSTRAINT chk_cep_format CHECK (CEP REGEXP '^[0-9]{5}-?[0-9]{3}$'),
    CONSTRAINT chk_estado_format CHECK (Estado REGEXP '^[A-Z]{2}$')
);

-- =============================================
-- Tabela: usuario
-- Armazena os dados principais dos usuários
-- =============================================
CREATE TABLE usuario (
    ID_User INT AUTO_INCREMENT PRIMARY KEY,
    CPF VARCHAR(14) NOT NULL UNIQUE,
    Nome VARCHAR(50) NOT NULL,
    Email VARCHAR(50) NOT NULL UNIQUE,
    Senha VARCHAR(255) NOT NULL,
    DataNascimento DATE,
    Telefone VARCHAR(15),
    TipoUsuario ENUM('freelancer', 'cliente') NOT NULL DEFAULT 'cliente',
    ID_Endereco INT UNIQUE,
    DataCadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Ativo BOOLEAN NOT NULL DEFAULT TRUE,
    FOREIGN KEY (ID_Endereco) REFERENCES endereco(ID_Endereco)
        ON DELETE SET NULL
        ON UPDATE CASCADE,
    CONSTRAINT chk_cpf_validacao CHECK (LENGTH(CPF) = 11 OR LENGTH(CPF) = 14),
    CONSTRAINT chk_email_valido CHECK (Email LIKE '%@%.%')
);

-- =============================================
-- Tabela: preferenciacontato
-- Armazena preferências de contato do usuário
-- =============================================
CREATE TABLE preferenciacontato (
    fk_Usuario_ID_User INT PRIMARY KEY,
    MostrarTelefone BOOLEAN DEFAULT TRUE,
    MostrarEmail BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (fk_Usuario_ID_User) REFERENCES Usuario(ID_User)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- =============================================
-- Tabela: categoria
-- Armazena as categorias de serviços disponíveis
-- =============================================
CREATE TABLE categoria (
    ID_Categoria INT AUTO_INCREMENT PRIMARY KEY,
    NomeCategoria VARCHAR(50) NOT NULL UNIQUE,
    Descricao TEXT DEFAULT NULL,
    DataCriacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Ativa BOOLEAN NOT NULL DEFAULT TRUE
);

-- =============================================
-- Tabela: perfil
-- Armazena informações complementares dos freelancers
-- =============================================
CREATE TABLE perfil (
    IdPerfil INT AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(50),
    Foto LONGBLOB,
    Bio TEXT,
    ID_Usuario INT NOT NULL UNIQUE,
    MediaAvaliacoes DECIMAL(3,2) DEFAULT NULL,
    TotalAvaliacoes INT DEFAULT 0,
    DataAtualizacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_User)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT chk_bio_tamanho CHECK (LENGTH(Bio) <= 500)
);

-- =============================================
-- Tabela: service
-- Armazena os serviços oferecidos no sistema
-- =============================================
CREATE TABLE service (
    ID_Service INT AUTO_INCREMENT PRIMARY KEY,
    NomeService VARCHAR(100) NOT NULL,
    Descricao TEXT NOT NULL,
    DataCriacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('disponivel', 'em_andamento', 'concluido', 'cancelado', 'pausado') NOT NULL DEFAULT 'disponivel',
    ID_Cliente INT NOT NULL,
    ID_Freelancer INT,
    DataConclusao DATETIME,
    FOREIGN KEY (ID_Cliente) REFERENCES usuario(ID_User)
        ON DELETE CASCADE  
        ON UPDATE CASCADE,
    FOREIGN KEY (ID_Freelancer) REFERENCES usuario(ID_User)
        ON DELETE SET NULL  
        ON UPDATE CASCADE,
    CONSTRAINT chk_nome_service_valido CHECK (LENGTH(NomeService) >= 5),
    CONSTRAINT chk_data_conclusao_valida CHECK (DataConclusao IS NULL OR DataConclusao >= DataCriacao)
);


-- =============================================
-- Tabela: perfil_categoria
-- Relacionamento N:N entre usuários e categorias
-- =============================================
CREATE TABLE IF NOT EXISTS perfil_categoria (
    ID_Perfil INT NOT NULL,
    ID_Categoria INT NOT NULL,
    DataAssociacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_Perfil, ID_Categoria),
    FOREIGN KEY (ID_Perfil) REFERENCES perfil(IdPerfil)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (ID_Categoria) REFERENCES categoria(ID_Categoria)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- =============================================
-- Tabela: service_categoria
-- Relacionamento N:N entre usuários e categorias
-- =============================================
CREATE TABLE service_categoria (
    ID_Service INT NOT NULL,
    ID_Categoria INT NOT NULL,
    DataAssociacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_Service, ID_Categoria),
    FOREIGN KEY (ID_Service) REFERENCES service(ID_Service)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (ID_Categoria) REFERENCES categoria(ID_Categoria)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- =============================================
-- Tabela: avaliacao
-- Armazena as avaliações dos serviços
-- =============================================
CREATE TABLE avaliacao (
    ID_Avaliacao INT AUTO_INCREMENT PRIMARY KEY,
    ID_Service INT NOT NULL,
    ID_Avaliador INT NOT NULL,  -- Quem está fazendo a avaliação (pode ser cliente ou freelancer)
    TipoAvaliador ENUM('cliente', 'freelancer') NOT NULL,  -- Tipo de quem está avaliando
    Nota TINYINT NOT NULL,
    Comentario TEXT,
    DataAvaliacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Service) REFERENCES service(ID_Service)
        ON DELETE CASCADE 
        ON UPDATE CASCADE,
    FOREIGN KEY (ID_Avaliador) REFERENCES usuario(ID_User)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT chk_nota_valida CHECK (Nota BETWEEN 1 AND 5)
);

-- =============================================
-- Triggers
-- =============================================

DELIMITER //
CREATE TRIGGER criar_perfil_apos_criar_usuario
AFTER INSERT ON Usuario
FOR EACH ROW
BEGIN
  INSERT INTO perfil (ID_Usuario, Username, Foto) VALUES (NEW.ID_User, NEW.Nome, 0xffd8ffe000104a46494600010200006400640000ffec00114475636b7900010004000000580000ffee000e41646f62650064c000000001ffdb008400010101010101010101010201010102020201010202030202020202030403030303030304040404050404040606060606060808080808090909090909090909090102020203030305040405080605060809090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909ffc000110800a000a003011100021101031101ffc400bc000001030501010000000000000000000000010308020607090a05040100010305010100000000000000000000000102030405060708090a10000102050204020705060306070000000102030011040506210731411208511361712232d31496814217570991b152622315724324a1c133531647d1829263442527110001030204030309060307050000000001000203110421311205415106b1130761718122327292330891a123145416c1d144f042526224341582b2c25363ffda000c03010002110311003f0091df8d5bcfcb7872efaa2e5f1a3258a08e9885e77ddf54ef42e64ff5725351a7ac79a3f1ab7a3f3872efaa2e5f1a25ee22e4a0fdd7bcfeae4f88a3f1ab7a3f3872efaa2e5f1a0ee22e48fdd7bcfeae4f88a3f1ab7a3f3872efaa2e5f1a0ee22e48fdd7bcfeae4f88a3f1ab7a3f3872efaa2e5f1a0ee22e48fdd7bcfeae4f88a3f1ab7a3f3872efaa2e5f1a0ee22e48fdd7bcfeae4f88a43bd5bce3fef0e5df545cbe341f978b9243d59bc8feae4f88a06f56f37e70e5df545cbe341f978b927b3aa77977f5727c451f8d5bce4e9bc3977d5372f8d0e75ac6d188cd35dd57bc834fcdc9f127ff0018f7aa53fc62cb3eaab8fc784fcb47c45129eaade40ff7727c498fc6ade7fce1cbbea8b97c688cc50f2517eefde6b4fcd4bf1147e356f3fe70e5df545cbe342f73172527eebdebf5727c45077ab7987fde1cbbea8b97c6804111e090f566f23fab93e2293f1af79bf3872efaa2e7f1a1df978b923f76ef3fab93e24a37ab79cffde1cbbea8b97c683f2f17240eacde4ff5727c452fe356f47e70e5df545cbe341dc45c92feebde7f5727c451f8d5bd1f9c3977d5172f8d077117247eebde7f5727c451f8d5bd1f9c3977d5172f8d077117247eebde7f5727c451f8d5bd1f9c3977d5172f8d077117247eebde7f5727c4528de8de754fff00d872efaa6e5f1a1ed862a114c52b7aab7a247fab93e22b19886355a2f3e7c9ef3bb4a5872a6440844084408440848b126dd74992184a96e2b904a412493c070e702708cbb2531f633b2bdd0ddda5a4c82ee51b7b84d782aa2bb5c1a26b6b5bfbae525268b293c94b2906608ea1c30dde7ad2d6c9da1beb3bc8b72745782dbb6f6d12c9f851796a091e45b10c4fb05edfb186102f16cb96755da79b5972af7299bd3f858a42d8139f324fa635e5f75d5fceef5681a325d19b47811b15a4603f548ee3aa856475f683db43acbacbdb39689392e975bf9a6d6997814bfce283f75df1c4c87ed59149e13ec2f6e930369ce82ab1d5ff00f4ff00eddb2092add6ebb61d51ac9ea0ba2de6ccfc5aab4ba2425c883e98aeb5ebbbf89deb8042c6b71fa7ee9eba61a3a463bc9401448dc6fd3773eb2a9fabdb1cc68732a24266c592e00db6e2e2c0d52870a96c289e53298cbf6eebeb594e9941695a8ba87e9e371b605d692b5cc1c09f58f99402caf0acbb06bcbd8ee638d56e357c63a8aed9574ea69c52112ea5a091d2e2533d549247a633ab1bf82e47e13c3bcdc1686defa7aff6b944773139a4e5519ab5e51717374ab216919855279c30a1a9499422713449d421689352506708941aa5810ab47387353d99a6c446d535e7cf93de77694b0e54c88108810881089c213442da7f66dd9edaee7476fddcddbb326a9878a5fc1310aa67cc496f4522b6a9b73c640b4da84a5ed1e51aafac7ab1cd3f97b634ff0011fe4baa7c1cf09bbe60dc6fd80b4e2c611ff70ec5b646fde5287bc653573e7cfed8d525cf7125c6a4aeb6861642c0c63406b72012ad057fef814d45f305a79857fe93ff008421af0484109f68a75903e8d0884d2e29cd4e2d1d721a1039185f6730a394710b1f6e2ed7e0bba7625e3d9f6354b91dbd5ad3179b93f4ebd7dba77d3271956bc527d738afdb377b9b2935c6e3e6e0b19ea0e92daf79b731dcc40bb83a82a3cc568dbb9ced5b28d86bb26ed42faeff00b6b767d68b3e405be87e854475a29ebd2340b29f71691d2be5a8946f0e9ceac877266977ab2373f2f997137899e165df4fbfbe61d76ee2687323cea28208339465c569cd344aae5004d72a409c0900aaac0942270144b02555a39c39a9eccd362236a9af3e7c9ef3bb4a5872a644084408484c2138d1239d40a5ef675b0ed6f36e08b8e454a1edbdc30315d910292535afcfae9a8672320ec8a9cfe4491f784621d63bd9b08bbb61f5df92dc5e10741ffcfee424987e0444177979516fb9be1d23dd480123c0012007a84686717bdc5ce35257a0315b32da36b18006800003c8be86c1215c8f286a7d35568b15675975c2cd5d49436aacf21f095aeb93d08589288f2fde075d09fb6174ac9766db1af0e328a8e0ad9b7eece736c743cbb93574078d354d3365b32f4a4050fdb1511d02bc4bb2dbbc6150a44e01b998d66ea4db2e16d66d77e6d0548a27425687cf30c2d5a93fca75f5c4e34f058c6e5b53ed3d6cc1fed8abe2e98bb4e7f52da034be2a6547d93fe13ca192c064f6782b49c45563e70f96e2da75a285b664a491a83144f84b734dc15b791e3965cb6c574c6720b6b576b15ed9552dded8f27a9a7a9dc335a483c0f34ab8a55250d4454d9ddc96af12309a8e4acfbdecf6fb95abe09981cd70c8e4b9d4ee1f652e7b0fb9774c39c53b578fbe94d5e1f7c727d5596e7944a0ace83adbf7172004c4c684474374f6f2cdc2d1a6beb0cd79dde21f4849d3dbabe177b0e3ea9e0b0a1e022fab057368014a9e7014d6aaa11391021568e70e6a7b334d888daa6bcf9f27bceed2961ca991021102122b44acf15244d0d8f7967c07a62098d057904ac85d2c8d68e2405d10f6abb569d9fd95c4ec559489a7c9ef4d0bb65ce04f4b82bae294b85954c4cf928e946a7918d01d49b9baf2f5eeafaa325e887857d30368d8a3d4d02578a93d8a478d27a6a631cd4b67c63501cd5a994e5b4d8d52a8200a8b9be3fd252cf9ff0012bc0084d2af9b76d7248fa9a68e2a3856d6555c2adfadac78bf515122ebcad544812903fc291a2472894059c470b63686b7208207310f38294e084cdb71b79a5169e65414cbc8252b428702950d418735472c62414729b9b4d9e1ccac8aa7af33c82cc9437735700fa4cc21e48fe696be9f5c54c7802b03dd36f36d25736bb2571655670eb06e14c91e630097d038a91e8f5453cd1922bc95b2a163a8a4f5a9419151baba810a11f7ddb54ce73b375198d3b1e7645b5abfee54e427a8b96a5909af6b94a49e9706b21d06339e88dc7f2f73dd9383968cf1d7a4a2dc76575d35bf89065ccd4ad15284b4f08de1aaae3c97073bcb9a54f387143555089c8810ab47387353d99a6c446d535e7cf93de77694b0e54c88108810b35f6e1b7f4fb9bbe9b6b8a5731f356876bfe7320a7e99cedf6e6d554febcba837d267a495161ea4be16b61249c5679e1aec6ddd7a86daddc3d526a7d18ae9114104a95d2028999d348e7791c5c750c8af49a3d3dc88c0a69007dcadfc9b20a6c6ed8f57bea05e5ff4e869e532b795eee9e039988f4aafdb2c6499d87b23351b2a9fb85daa175f501752ed4f172455a78484cca25d04ad830dbb626068a2f814246461e2a382a8143c57d238c19a1f441d7d10029a15e5b7f94af10caed97671645bd64535d50359d33aa00997fedfbc3d5e98a863eb9056addedc4b01e63253f9c6812a4f525d69408982149524e8644684187b812b0118b561dbd5bd56db83d4d2f6080b68ff002ab87ec8a195a5871c8a4215a1915969722b15f2c15ac87e96f7415b46f327829354ca9a2381e2152892d2efb995af1cc76ab4ef966cbbdbe789e2ad2d3f702b96bab6dda3ababa2a84145451bae32fa65c1c69450b1f6111d396ef0e8da7981d8bcb9bf87ba9e461cc39dda5509e713154ad55422722042ad1ce1cd4f6669b111b54d79f3e4f79dda52c39532204242794349485c01039ad8f7e9c18ab55db97b81992d335e3b6266868952f75dbbd400b23c0f96c2a35bf88976596ec8ff00c755d27f4e9b40b9dc27b9ff00d14fbf92dc736499ccce34fd70a2ecf7308382c0fb8b73557debfb7293fe9ed402024f3755aae7e9079f84a2402a2ab3ed86d808c9e6a026f457f6adb74fb370de4dc7a1c0eed58952e82b6ab24aca6bb55a7aba7cc6d21c75e58247108091cb9c5d2deda7201633557c8aa6e2ea1849ef5e05159bb5bb9aacfaa1e7fb68ee42c3bfb67b6250abde1577a9ebba5332543a5c0f808a80153975292009f8e90f9e09a3769959a69e44e82e219c7e13c13cb8a9cb4cebeb6195d5b49a6ad71095d651b6bf35b65d509ad0870805402890260691425cd268382aaa104839af0b3373276b1dac7b0e5d0b57e68853355735ad144c3484a94e3ae74024f481391f66532ad0448c654e02a9a410095ae77bb82ed1ea6f8ed8f7afbc3a2cd2eecafcaacb45256d550e3ad2944a543cea4683640e9d4a9604bc671706585c682e0c229e456d7ee36f52c73c125741bdbf6618d675b4b875ff0011be52647604d2a292df78a0ad6ee148fb547fd26d4dbeda97d5340139a89074314afd61c5ae14a2c3ef1ac133b4105a792bb33960f95435a944c05169d58e23ab54fd939c515d70548563ee3d27c08262963a77adf3a8e520c2f69e2d3d8b997de9b4b364de2dd6b4b007934391de92d0024024d638a000e52063a63669c4b68c70e4bcc5eb5b3fcaef3711f2776ac6e9e71732b166aaa11391021568e70e6a7b334d888daa6bcf9f27bceed2961ca99102121f186b8605216556dfbf4cfb5d3a70edd7be8482aadbbd151a1e902a2dd25379b29f8753e748d47e234c1cf85bc5b55d8bf4d76e05b5dc83fbda7ee5b30121c046b25d4a312028a3903afdc2e17a719a85315152f558a7ad5243ca65d515a50e96d47a57d2647a499194a2684819acfad227c7106f1a2d737789da26114db354579ed7304a0acee1abd3705ee3eea65cc9c9f21afbc5416433595355528789614d21c436865a436ca8a7fa7d3296dae94dd36f7c4622435f862ecbd0b59f556d5b99943f17b493ecf2f2ff006fe4b32f6fdd9ee0171d81b4671bb4ddbb6a7badc66ad9addafdd1c6ede9a4bcd3bc8a46854b770a461a6c545beb2a02c1a5a800f96a25210ae9225eacbcb1900634b5c40c74aa6e9bb3dce19fbc0d701fe65297cb2a92c369614b135b214569428ea5214402a00990240d2352bc163cd32e0b71b1bea027339af1af1b45b79bdd5b62c0f78efb576bd9fa9a8f99dc3b250a9f61dbfd2b03fa76ba9a9a721d668de7085d47410569406e612b518bdec3342cb90e97d9564dfc5d3ad5cdb7f68ad5b2fb4adedb377756db0e3d8e61b47dbfdbcba9a4b1358fd17f6cf391545d6abc54b8ca99f95432a4cd2b5f5048f2fcb2a31b69bb9ed74d464668032ae2b4d0dab7aef68e8df5273a1a2e83363b0ceddb6df20dc4c63b77dbda1db4c7321ab66f3915aece85515a2aee853f2ee54d2dbfabcba60b6d080bf2d290b902533049d5bbcdf417139ee8601666ddb2e2d606be5ccf0e4b34659edd99e027ecb8df0f5c5827654029ae0b18796af4451305656f90aa79c518e3c81ec5cd77704b6ea77d3785e693d09564977d0891d1f20f0f4831d1dd3ad22c235e6af886f0fdfee48c715878a7a7ed8bdac2d2408440855a39c39a9eccd362236a9af3e7c9ef3bb4a5872a644085498477b2535cd71228b73ffa6ca108d9ccc3a10133c8dd9c84bff834b1a6bc41ff0070c5db5f4e8d0ddb66033c16c22b2a9ba1a3acae792a34f40cbcfd4a920121b61056a3a91c846bc68a9a2e938fdb6a84f88657459f62b8ee71687c2ed79851d3dce81ad3a9a6eb121ce85113994a8949d7888a87c2633a4ad9518f507995cc4be644ba669002753a01303f798601435068a58c8071150a82da8f13381c5f5a83e74ae7fad80144ece1efcb148e354a2730419149983e07d108d038a656898f2cc88d3a492a239751e7eb8495809c02702ee25658d95ad72df9f5b5a09059ba32fd23d2e213d25c4cbd45313c2d6b72563df6273adc9753052d3317908b5a589c9c7dc4f40f1e9d4c12b960e6b558c1faca7a1a7aaacad7c5351d1b4ebf5754b32434d3282b5a947c0006292369748d6b4549215b773b86c36d23dc68d0d754fa0ae5db2bc85dca72ccab28a85953992dcebebfa48d40ab7d6e0d664f0570e51d2bb5c661b76b0f001798dd4171dfdfcd256a4b8f6af01ce5172ad5595370211021568e70e6a7b334d888daa6bcf9f27bceed2961ca9910212180e49466b6fdfa6a5e9a7b0fdcfc73cd01db7dd68ab50cff002565206c903c02989469ff0011a1732589e7275575e7d35df6a8af233fddd2a7dee655d4dbb6d771aba94cdea6c7afc52d4e45445bdf50fd84031ade3c5c1758c4df59a4ad2c7e9c1baa2fdb635fb5973aa2e5e30229aab2a544153b68ae3d7ec6a490c3c48248d02d23d575bf6687071c415b2dbec37ccb63e9752470316f0e05053b0ead13b4e19ab714abed3c90d36cd6a07f9ca7d4d2cff893d0a1fb0fd90d76282282abd1a372e05949aff290f1e2db3d4523ff00328ccfec03d10b5a20335006abd3034852535c285641daba7a9a8cff001c34e0ff00a6756ebe41224da1b5757ede1f6c48c215af7a7836ae0a55e6950daeb29a95266ed32545d4f21d7297ee88ee1d45809048c16ba3be5df046dded9b981d95f58ccb73a9de610da080ba5b34ba2b2a0ea082a9f948fe29aa5302335e8ad9bf33762670fc367dfe65cfbe37f5dc5b66ddf928c9ef66c30e14e7e75a3297869e1ea11ba4370c170f4eed4e24714f39ca242a34dc2211021568e70e6a7b334d888daa6bcf9f27bceed2961ca99102110214a7ed037a69f66777292a2f953f2d84e62cff006bcb1f94d34de638955355994ffe0ba35d27d2a54bc0e29d5fb43af6c5c582af6e4b6cf843d5c764de59a9d48a43477f05bf3bcdad8be59eef6b7ca56c5d692ba85cf682d0a455b0a65466998224bf4c680898f0f7570c57a196372c9436669ab5d421721bb559e647db96f1d15e1ca2710f6195b5569ca2c86495d55134eae92b694ce52f70944f81093c232c744248413c16d561063691c974658edeecf9358ed19158ab1171b2dfa959acb4d720f525da6a84f536b07f682391041d446381a5af20a5a8a1c31512fb9ddd9ee7f6469ab73bdbadacc6378f6ee97a0dca81dba57d86f76deae2b70213554f50d4f8ad296ca79894d4229a4118a9155956c3b46d97ee6c72c8e63fd14f4619ad58d57ea71df7db9fc88bbdb761d7aa7b832b188b74371ab22d8f8ff36a96aaa26a51a8f664d812f784c8349ff25071345b287865b6bb4812be8333518fdca446c377f9ddce7f516ac42fddac63d90665734a8b7536dcb576a61b4a0153af5536fb158965b4244d4a4b840e42640841b8c4e70680492b1fdf3a1b6fb06ba4139d239e35f365fc56dd313732e76c142e673496ca0c99c2b55c282cef545550b1d5eeb6dbf5496dd77a471594227c7a4708b886d4556adb80cef2919259c2aa5c76f38ff9abbae52f363cb03e4e8547de99d5d234e5203d60c4cd1855619d45747d58c2f6738c9ad565a5c9b30be56a2dd65b253d456dceb566486a9a95056b24fa00fdb11c513e69dac68ad4ac2f76dce2dbece4b994d18c6e27b17361bcfba977de4dc8c973dbc8f2d37378b763a113e9a3b6b07a69a9d3fe103a9479aca8c7436cbb632ced9ac6f25e6c75cf52bf7cdd65b971389c07014c3058b7a91fc3fec8bd60b1048a5054a5ca15c414a5510d488810ab47387353d99a6c446d535e7cf93de77694b0e54c881088109b7505c429b2029b5cbad07506466262149f54b79a7b0d1c0d684725b4cecbbbb44b2c5b3657752e5f2748d86a976ff3575d3ec75688a0aa59e090aff82af0f60f29eaeeade961533dbb695cc7f25d4de0e78b0637376fdc1f864c71ff00c89fb941bfd50b616ab6c77cd5b9b66b72d9c2379cbd58a294108a6c969d1ffd853aa5eca14fa501f40e735c89e98c42ca605ba0e6382ef7d82f9b730358d3523ef56df64ddd48db7b92769b3fba2c6017b75d7319bc3ab2a4d9eb9e548b6a9cfa29df528152bee2cf511d254623b8b50f6eb68a73ae6afef8f48353885b9e586aa995b6f3697d87d0a438d2805254858929241d0823888c7e67e6d50c570e6e20907c8a22e49d906c5e437276e0cd25d71d43ce97556ab7dc7caa34295ef794db8db8500ff08321ca422d4edaadde6aead56656bd7db941188f0701cf359e36b76876f3682d6fdb706b0fc82ab64abadd9e73e62b6a549334871f2028a52754a44923901159058c4c382b26e7bcdd6e0eacaec390c935bcbbd1886c860f5b9c658ea9e0ca8b360c79a20545d6bd693e5b0dea081a12b5704a41339c81ba410990e90adb1b74b4d54c2ec97726ab70fb42db6dc07d6daefb7da4b93d90a9b9250ddc515efa2a1b091a00d99253cca409eb12cccee5a43b82d71bbb6976ed469cbec508bf519dde72d78fd87662cd52915193285c7386c024a6869d4a453532d407b3e73c0a883ff2c69a88ccfa176e6ba475c48301ecae4efa80eaf95b0336ab624992bae998a6216a1d7cb97a236eb05305c73a0b73cf8a6e1c4d12a2006a8442a4440855a39c39a9eccd362236a9af3e7c9ef3bb4a5872a6440844084408552564256822695f14f23eb863e30f1429baa56b8161a29958a774f6cc836dee1b2bdc861eeeeeedc573496a96bc3e96af341e58932a69d5482974ff00e4b8485a79a940ca305dcba344b377b09d278f25d15d01e3e6e3b24421b92646b7239bbd2b5a1946d6334f74b9556115aebd684bce7f69b7dc3a3e6cd3a5c25a2e388fe995f4cba8048131a436f3a4de22258e15a6355bbfa67eab6cee27116e10b817101a58399a62b735b6fbb9518ed153d972671571a05369552571485beccc4824a899a932e5cb9469db96d2470f2aebe82e229e36c8cf65c011e915526adb79b4de69515b6ab93170a65fdf6dd49e93e0a130527d07588b495351aac9cb374b18c692fd25354b77ebba0c8505339d49491fc6ea2607d9389464a68da1d55a5eef6fb8dc52e3766703cd2babe9b24b72add75a27851936b6a8ea12e7b0c2d0a5a819892ba809f8e917ddaed5ce3af82b5ddeeb0c2e2c7e056ca7f4b2eeaf69319ed377a71ace7732d38d5bb6a6e8fdedcaaadaf6db4b565bb53a0a9d6db2a2e2c25f6540a50827a880012a021773b173c819872c1b7c746fb812021c0ff60b42ddf0779576ee4b79f38c930ea8a9b060cf57b48c75854d8afaaa0b7f4a28d55694abfa5a23cd0d72528951ea9819a6dd31b6b68e30294fb56a51d056735fdcee174d1248f69a038b5b407252cecb7417bb2592f092929bb51d2d5029f741a8692b50fb0931b1ad6612b038715e7ff50599b5dc2688e61c7b57a662a08aab320400510885488810ab47387353d99a6c446d535e7cf93de77694b0e54c88108810881088109099428098f934f05f45151d4dcabe86d944c9a8acb93cd314ad2752a71e504247daa204515ece2385e5d80a1c55f3a7ac5d77b8dbb1b8d5edc067985bb2736db07aba46a9aa31ca5eb69086c3c86434a0102539b652493ce71cdf720191c4732bd8fda20ee6ca1672637b02b3ee5b138654f99f29535d6eea979403e1f0897807124fed2620572565dc7616bda32b3e4adb8c27dd6aa29fc990f5a3ae0d540958f20ad37fea7bb1f90e234db51b9373a461eb73eaacb1555cd877cd01c97ccd236bf644bd94ba1333aca404655b1ca1c0b38ac63a898cc1c428c3d8cf66778ef4f77ffe8a1913987e238f50d45df2bcc1b6135550d53345b479548dafd853ee38ea024a8848d49ea23a4d4dfdf36ddbae952161ee81ee1a88a059b3bb6fd2bf77fb69afb6dcf1ec8a8775b01be828b5e46cb3fdaaad9a86813f2d54c3aa536970b69eb4a92e14a84fa644148b8ec772edc71068791584f50f565b6cfa44ed7697d46a190f39570ece317ca2db4c56d9915b5eb4dd6cecae8dea37d3d0e84d2b8a6d048f4a0022367edcd2d8834e61707789725b49d4370eb7787c66841188c964c8af268b034400d50885488810ab47387353d99a6c446d535e7cf93de77694b0e54c88109099418242404bc7809c39a2a334e030aa4981ef28373e0547a67ea9c5baeb74b5b6f9b235be72b20dafa4f7adcc8165672ce7fc8d2578559915b29165b2e97d434579402a47d6488c5374f10b6ab36121fafddc56f9e91fa4eeb9dfa87b816c3ffa82d5b49d82ede705b4b161dca6f206f706a6a9a6eab1baf4c936e60ab54b8da04cadc00ca6bf74fdd06309dd3ae0ee90e988d1879e6ba4bc3dfa6eb3e96bb13df9d772ce1fddafa54c742489ce5af28c46402b50ba29a2980f6464ab201e22711a7a4901ca10d10b05f70fb038a7729b6955b5f99dcaaecb6aaab8db2e49bcd006cd632edb9d2a9365d4a80f31b52d048d4754c4545a5e3e09039aa92eecd970cd2e5953b4bed7367f61eed9be4fb5960562cbbf525bad2fd95150a7e8d8668d66a57e4870a9692eb852a5cc904eba7086dc5e3e6c1c705886ed56358c0280554a0dcac0ec5b9d82dff01c8e9d2fda2fec16c9290bf977927ada7db0782db580a49f58e7159b4ee0eb599af69a00b01ea6e9a8779dbe5b5781eb834e751c9734d93d92af14c9b22c46ed52d2aed8a57555bae4038090ed2385b275d646531e88de967d43b6ccc6b9b33751188aae03df7c30ea6b095ee7d84a62a9a3c34e9a79d788a041d7ec3e31786c8c78ab48216be963744f2c906970e0553389d91e049340145a825999c2530aa404d724b089cab47387353d99a6c446d535e7cf93de77694b0e54c4aa16e21b495b8a0da13ef2cf0110cd3b216ea90e96f3392afdb36cbadc6e1b6f6b1ba595d935a2a4ab5ee395d0d2a568a76cd5d47dc54fa5b12f13c7fd91ac37cf13eced5e63806b70e3985d9de1b7d15751efb1b2e3712db781d8969a8900f31569bd935dea16b5375029d2a97f4d2804097846b0dcbc48dd2e49d24301e5815dbdd1ff0047bd13b1b5a5cc75cbb88968e0bc021f519ade2b3e93fb8728c2ae772bb9c932cae779cae85d97a17a7f6a03f27631424716b404ec52389228725943869cbef59ff633b87cc7646eae7c8937bc46e6b0abe62af3a52da95cdfa756be53b2d09910a1a2819095559dd770683258cf5074cdb6e6d3401b2f03fcd6e5f6b778701de0b07f7fc2ef48aa0c485d2cef499afa27089f43ec13313e4a1349e44c6576bb945336830239ad1fbaec375b749ddc8dc398cbed59462b55a347ac073490d7263ce9751458ee3bb9ac7364ed0fdbad8ea2f7b8cfb6b36fb00f6d9a249493e7d6ca520009a1139acf80d62d77d78d637483eb1597f4ef4bcd7cfef1e34c4dc4f33e6fe2a6976a58e6438dec5e14fe6552f5766799b4ac8f2dab7ccdd35b7c3f321b3a0906992da12048002400022a616b9ac01d9ad4bd67790cdbacac845236603d181fbd48e903c44fc225ef03450e4562ed18d4661733fdff00dbd8b67765ba09a54f969b98b4d73e90243ceaaa064ae52ff0c6377933a198f76485d69e1ed8d96e3d3d08ba81b28c7070af151218badd9a4f4b371710812924a8a80f54ce912daf536e76efab67710381382b7f517811d0fbbb08936c858e39b9ac00fdaae1a3cbeb1294a2a184bc13ef383451fb2360ed5e2d5d4634dcb0160e59ae59ebefa11d8aed865d9ae1f1cf8d03c80cfb95e56eba52d785161dea58975367423ec8dc3b075758eecc1dcba8791cd79f3e2a7831d47d0b7462dc222e67091a0e83e62bd5067194902955a8413c451388e703548ccd362236a9af3e7c9ef3bb4a0c3ab415392a375750038ac71965dde71ffed94cef4b2d247cccb42a5f307d0239e7c4dea995f746ce2710d6674c8d57acbf45de0bedf06ccddfef620f967f62a2a5b434c3955598667899c69d60d3e55e833281388504ce7ce1427835557983c0c154a94b89f030e2eaa691549e60f4c36a9f19d3c17ad61c8af78b5d696f98d5dea6c379a233a5b952baa65e44f88ea49064798e061ec90b4d415477b6715d30b656870f2a9f3b75fa8264b6da6a7b66e7622ce4c861247fd496d7050d6ae5c0b8c1059519f34948f445e22de1d4a3f82d6db9f872d7bb55bbe84f02701e64c6e977ed7dbe51b96adafb0398ab754809abc82bdd4bf5a807de0c34d8f2d07c144aa5c803ac24dbbb88a330526d1e1eb617875c383a9c1433c2acb5db9bb9387e3b71af7abab335be5b68ae358f3ab71d7457d536dbab5ad53528f492493ac5b227174a09e2b32de658f6fdba4918da06b4e5e65d73258a7a6669e9299a4b54f4884b6c3690004a1024001c801c2333695c417af2f95ce38924a51ce1b20c153357333dfd56a2bbbb4dd7e80b95bd569a4f6b97916da7121af89318aee27f1dcbafbc2e669e9e83d3daa20b6343142715b17494e480e02508421e48c80aafa692a9da4792f327a5438fa62f1b26e9358dcb258b0a115581788dd03b77566c93da5ec61dea12d34a90402453d2b31d3b81fa7a6a84a81150da5625ca7ca3b036aba6dc5ab2469a8217cfc7586c336cdbcdcd94a28e8de450f2a9a7dcbe94738b93563accd362236a9af3e7c9ef3bb4a66a5f6a99971f795d2db292a59f408a4dcae5b6f6d23dc68002af3d27b3cbbaeef6d6913753e47b70f25457ee582d4f29e75e79666a715351f5c71a6e774fb9b97c8f352495f43bd11d396fb2ecd6d656e34b18c6e1e52013f7a22deb2a73689604311027a20422042204220422042cc9dbbdde8ac5bf3b3775b939e4d05164f64555d469d2da175486fa94491a02b13f445559b7f19a78058bf5944f97699e360ab8b4aeb1499eb19986d003cd712dc3eb239bc8948210a8d99d2ab9bafd43b03c8315ee6335c96e36e799b06e19a3b963777524862a47cab4cbcd254400a5b4e36a0a1c65d2781118aeeb6ef64bab30792eb5f0b371b797668a16b86b6d6a396387daa0e070238fdee116cd44705b4a46960a94fa5415c21d5aa69af2fb52c3854024258c37551d91591b0fac554da50daccd74e7a493c65ca71d39e18ee3df6d4d849aba3cfd2bc53fad2e966ed5d732dd359a5975ecf2f5462aef473fb2365b5720b3daa53926a220682aa6bd3fea5e39b9dda55b395d436dda9c65664e549e848fe5e2a23d51af7c4adc843b4ba307193f82eb6fa35e8dff0096eb78af1ccd51dad757fd430589dafbdf6472e6a2715ed3c4c0c2699277ec84aa95e882a818220aa350441546a0882a8d4110551a8220aa350441546a0ab43ae34e36eb4b534e34a0b69c499292b4ea082350442b5c43810992b35b0802b5047daba4aecb7babb16fee096fc7efb744d26ed62d4ad3792da1e9217716d91e5fcfd2ff00cc4afa479a91aa173d24524e59637ad95b4c885c95d7dd133edb74658d9585e6a0f2f21f4e5f666a6f14cb5042872222e256b37c4749e6ad7cc308c37706c3518d6738d50e5963a83355a6be91152cf5cba42d3d7aa1407052644445242d90d4e2156d86ed7565235f148587c9857ceb549dccd93b29ed8e9ae34f8fed3da327de7ae649b060957535573a5a275c03a2a6b9975f71b69a048296d490a5ca40013316bbc75b4428454addbd292f52ef74324cf65bb69575685c39034fbc65e75a56756fbcf38f2d482b7645c0db69691d675514a13eca4151320340341c231970f58ae84b7d4581a49c0714e25729f54cf84152a6eefd618e0af3c29f6d0ed75295494e8429949e6133eafdf1ba7c21dc9b1cb342fcdf4a7a179cff005fdd3027dbb6fdc5adc20d7acf9f00b23b7f7bec8e83662daaf2c6390b804dc44ec180f353dd691752573d4ea7da5639cd6a10b7e96990a9ada4a8ba9f0ea94bf7473a78a9b8bcdd32006ba73a7957adbf42dd1836fe9e9f737331baa50d3fc268ac848299cf9f08d481c72a2ef1630d4d7255ccc155390d46b0b547a85133055269622660aa34b11330551a5889982a8d2c44cc15469622660aa34b11af841548703eaafb6cf73b9e3d74b75f31fb8d458af568712f5aaef46f2e9aa699d4f0534e36429244f8830ad7969047054d7d6505db344ad0e69cc1c4153eb11fd4bbb94c62d0d5aee35565ce96d4826e376b596eaca00d3a9da37190a3e9299fa62e43779800280d16b3bef09369b894bc1732bc0643ccadedc2fd43bb9bdc1a25da9bc9e8b6fadaea5697d38ed18a4ab5854b4156eadd791297149075e308edda622940154ed3e156cd672eb7832791d88fb1420b938edc6adeafad7d75f5f56e2ddacaf7d65d79d717ef2d6b54c92799316e2eabaa6ab62436d1c2dd31b435a32013333060a600a499f083049a3cabdbc75df2ef1453fbeae91f688cd7a06ec43bc4553469ad57377d5674b8de3c3cbf8c0d523434b7d06a56636fef7d91d5f1c9800bc298e27366730f034fb0afffd9);
  -- Cria também um registro de preferência de contato padrão
  INSERT INTO preferenciacontato (fk_Usuario_ID_User) VALUES (NEW.ID_User);
END//
DELIMITER ;

-- =============================================
-- Trigger para atualizar a média de avaliações
-- sempre que uma nova avaliação for inserida
-- =============================================
DELIMITER //
CREATE TRIGGER atualizar_media_avaliacoes
AFTER INSERT ON avaliacao
FOR EACH ROW
BEGIN
	DECLARE freelancer_id INT;
    IF NEW.TipoAvaliador = 'cliente' THEN
        SELECT ID_Freelancer INTO freelancer_id FROM service WHERE ID_Service = NEW.ID_Service;
        IF freelancer_id IS NOT NULL THEN
            UPDATE perfil p
            SET 
                p.MediaAvaliacoes = (
                    SELECT AVG(a.Nota) 
                    FROM avaliacao a
                    JOIN service s ON a.ID_Service = s.ID_Service
                    WHERE s.ID_Freelancer = freelancer_id AND a.TipoAvaliador = 'cliente'
                ),
                p.TotalAvaliacoes = (
                    SELECT COUNT(*) 
                    FROM avaliacao a
                    JOIN service s ON a.ID_Service = s.ID_Service
                    WHERE s.ID_Freelancer = freelancer_id AND a.TipoAvaliador = 'cliente'
                )
            WHERE p.ID_Usuario = freelancer_id;
        END IF;
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER atualizar_media_avaliacoes_update
AFTER UPDATE ON avaliacao
FOR EACH ROW
BEGIN
    DECLARE freelancer_id INT;
    IF NEW.TipoAvaliador = 'cliente' OR OLD.TipoAvaliador = 'cliente' THEN
        SELECT ID_Freelancer INTO freelancer_id FROM service WHERE ID_Service = NEW.ID_Service;
        IF freelancer_id IS NOT NULL THEN
            UPDATE perfil p
            SET 
                p.MediaAvaliacoes = (
                    SELECT AVG(a.Nota) 
                    FROM avaliacao a
                    JOIN service s ON a.ID_Service = s.ID_Service
                    WHERE s.ID_Freelancer = freelancer_id AND a.TipoAvaliador = 'cliente'
                ),
                p.TotalAvaliacoes = (
                    SELECT COUNT(*) 
                    FROM avaliacao a
                    JOIN service s ON a.ID_Service = s.ID_Service
                    WHERE s.ID_Freelancer = freelancer_id AND a.TipoAvaliador = 'cliente'
                )
            WHERE p.ID_Usuario = freelancer_id;
        END IF;
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER atualizar_media_avaliacoes_delete
AFTER DELETE ON avaliacao
FOR EACH ROW
BEGIN
    DECLARE freelancer_id INT;
    IF OLD.TipoAvaliador = 'cliente' THEN
        SELECT ID_Freelancer INTO freelancer_id FROM service WHERE ID_Service = OLD.ID_Service;
        IF freelancer_id IS NOT NULL THEN
            UPDATE perfil p
            SET 
                p.MediaAvaliacoes = (
                    SELECT AVG(a.Nota) 
                    FROM avaliacao a
                    JOIN service s ON a.ID_Service = s.ID_Service
                    WHERE s.ID_Freelancer = freelancer_id AND a.TipoAvaliador = 'cliente'
                ),
                p.TotalAvaliacoes = (
                    SELECT COUNT(*) 
                    FROM avaliacao a
                    JOIN service s ON a.ID_Service = s.ID_Service
                    WHERE s.ID_Freelancer = freelancer_id AND a.TipoAvaliador = 'cliente'
                )
            WHERE p.ID_Usuario = freelancer_id;
        END IF;
    END IF;
END//
DELIMITER ;

-- =============================================
-- Inserts iniciais para teste
-- =============================================

INSERT INTO categoria (NomeCategoria) VALUES 
("Desenvolvimento WEB"), ("Jardinagem"), ("Eletrica"), ("Mecânica"), ("Limpeza"), ("Fotografia"), ("Design"), ("Desenvolvimento de Jogos"), ("Marketing Digital"), ("Redação"), ("Tradução"), ("Consultoria"), ("Educação"), ("Saúde e Bem-estar");


-- Verificação dos dados inseridos
SELECT * FROM Usuario;
SELECT * FROM endereco;
SELECT * FROM preferenciacontato;
SELECT * FROM perfil;
SELECT * FROM avaliacao;
SELECT * FROM categoria;
SELECT * FROM perfil_categoria;
SELECT * FROM service;